name: Build and (Optionally) Upload uYouPlus to TestFlight

on:
  workflow_dispatch:
    inputs:
      uyou_version:
        description: 'uYou version to integrate'
        required: true
      youtube_version:
        description: 'YouTube version to use'
        required: true
      bundle_id:
        description: 'Application Bundle Identifier'
        required: true
      app_name:
        description: 'Application Name'
        required: true
      developer_name:
        description: 'Developer Name for Code Signing'
        required: true
      signing_certificate:
        description: 'Signing Certificate'
        required: true
      provisioning_profile:
        description: 'Provisioning Profile'
        required: true
      use_altstore:
        description: 'Include AltStore compatibility'
        required: false
        default: 'false'
      upload_to_testflight:
        description: 'Upload built IPA to TestFlight'
        required: false
        default: 'false'

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up the environment, install dependencies, and configure build tools
      - name: Set Up Environment
        run: |
          echo "Setting up environment..."

      # Download specified versions of uYou and YouTube
      - name: Download Dependencies
        run: |
          echo "Downloading uYou version ${{ inputs.uyou_version }} and YouTube version ${{ inputs.youtube_version }}..."

      # Apply necessary patches to integrate uYou features into the YouTube app
      - name: Patch Application
        run: |
          echo "Patching application..."

      # Modify application metadata based on input parameters
      - name: Configure Application
        run: |
          echo "Configuring application with Bundle ID ${{ inputs.bundle_id }} and App Name ${{ inputs.app_name }}..."

      # Sign the application using provided developer credentials
      - name: Sign Application
        run: |
          echo "Signing application with Developer Name ${{ inputs.developer_name }}..."

      # Build the signed application into an IPA file
      - name: Build Application
        run: |
          xcodebuild -workspace YourApp.xcworkspace \
          -scheme YourApp \
          -archivePath build/YourApp.xcarchive archive
          xcodebuild -exportArchive -archivePath build/YourApp.xcarchive \
          -exportPath build -exportOptionsPlist exportOptions.plist

      # Debug Step: Find the built IPA file location
      - name: Debug IPA Path
        run: |
          echo "Checking IPA file location..."
          find ${{ github.workspace }} -name "*.ipa"

      # Upload IPA to TestFlight (only if upload_to_testflight == true)
      - name: Upload IPA to TestFlight
        if: ${{ inputs.upload_to_testflight == 'true' }}
        env:
          APPSTORE_API_KEY_ID: ${{ secrets.APPSTORE_API_KEY_ID }}
          APPSTORE_API_ISSUER_ID: ${{ secrets.APPSTORE_API_ISSUER_ID }}
          APPSTORE_API_PRIVATE_KEY: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
        run: |
          IPA_PATH=$(find ${{ github.workspace }} -name "*.ipa" | head -n 1)
          echo "Found IPA at: $IPA_PATH"
          echo "$APPSTORE_API_PRIVATE_KEY" > private_key.p8
          xcrun altool --upload-app -f "$IPA_PATH" -t ios \
            --apiKey "$APPSTORE_API_KEY_ID" --apiIssuer "$APPSTORE_API_ISSUER_ID" \
            --private-key private_key.p8
